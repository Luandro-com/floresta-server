type Post {
  id: ID! @id
  slug: String @unique
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  isPublished: Boolean! @default(value: false)
  title: String!
  body: String!
  author: User
  news: News @relation(link: INLINE)
}

type User {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  email: String! @unique
  password: String!
  firstName: String
  lastName: String
  posts: [Post!]!
  subscribed: Boolean @default(value: false)
  role: Role! @default(value: READER)
}

enum Role {
  ADMIN
  EDITOR
  READER
}

type Category {
  id: ID! @id
  intro: String
  description: String
  name: String
  slug: String
  media: String
  icon: String
  category: ProjectCategory! @unique
  projects: [Project] @scalarList(strategy: RELATION)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum ProjectCategory {
  CAT1
  CAT2
  CAT3
  CAT4
}

type Content {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  headerImages: [String] @scalarList(strategy: RELATION)
  title: String
  subTitle: String
  logo: String
  aboutHtml: String
  villageHtml: String
  projectsHtml: String
  categoriesHtml: String
  categories: [Category]
  villages: [Village]
  email: String
  youtubeLink: String
  facebookLink: String
  flickrLink: String
  instagramLink: String
}

type Village {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  name: String
  slug: String @unique
  photos: [String] @scalarList(strategy: RELATION)
  media: String
  intro: String
  mapLink: String
  description: String
  content: [Content]
}

type Project {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  categories: [Category] @scalarList(strategy: RELATION)
  tags: [ProjectTag]
  name: String
  slug: String @unique
  photos: [String] @scalarList(strategy: RELATION)
  media: String
  intro: String
  description: String
  order: Int
}


# type ProjectCategory {
#   id: ID! @id
#   createdAt: DateTime! @createdAt
#   updatedAt: DateTime! @updatedAt
#   name: String
#   slug: String @unique
#   photos: [String] @scalarList(strategy: RELATION)
#   media: String
#   icon: String
#   description: String
#   projects: [Project]
# }

type ProjectTag {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  name: String
  slug: String @unique
  photos: [String] @scalarList(strategy: RELATION)
  media: String
  intro: String
  description: String
  projects: [Project]
}

type News {
  id: ID! @id
  intro: String
  tags: [ProjectTag]
  description: String
  link: String
  post: Post
  title: String
  media: String
  order: Int
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type NewsletterSubscription {
  id: ID! @id
  email: String! @unique
  createdAt: DateTime! @createdAt
}

type ResetPasswordRequest {
  id: ID! @id
  hash: String! @unique
  reset: Boolean @default(value: false)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  email: String!
}

type File {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  filename: String!
  mimetype: String!
  encoding: String!
  url: String! @unique
}
