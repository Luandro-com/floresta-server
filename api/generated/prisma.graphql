# source: http://localhost:4466
# timestamp: Thu Feb 20 2020 11:55:22 GMT-0300 (Brasilia Standard Time)

type AggregateCategory {
  count: Int!
}

type AggregateContent {
  count: Int!
}

type AggregateFile {
  count: Int!
}

type AggregateNews {
  count: Int!
}

type AggregateNewsletterSubscription {
  count: Int!
}

type AggregatePost {
  count: Int!
}

type AggregateProject {
  count: Int!
}

type AggregateProjectTag {
  count: Int!
}

type AggregateResetPasswordRequest {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateVillage {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Category implements Node {
  id: ID!
  intro: String
  description: String
  name: String
  slug: String
  media: String
  icon: String
  category: ProjectCategory!
  projects(where: ProjectWhereInput, orderBy: ProjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Project!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type CategoryConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CategoryEdge]!
  aggregate: AggregateCategory!
}

input CategoryCreateInput {
  id: ID
  intro: String
  description: String
  name: String
  slug: String
  media: String
  icon: String
  category: ProjectCategory!
  projects: ProjectCreateManyWithoutCategoriesInput
}

input CategoryCreateManyInput {
  create: [CategoryCreateInput!]
  connect: [CategoryWhereUniqueInput!]
}

input CategoryCreateManyWithoutProjectsInput {
  create: [CategoryCreateWithoutProjectsInput!]
  connect: [CategoryWhereUniqueInput!]
}

input CategoryCreateWithoutProjectsInput {
  id: ID
  intro: String
  description: String
  name: String
  slug: String
  media: String
  icon: String
  category: ProjectCategory!
}

"""An edge in a connection."""
type CategoryEdge {
  """The item at the end of the edge."""
  node: Category!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CategoryOrderByInput {
  id_ASC
  id_DESC
  intro_ASC
  intro_DESC
  description_ASC
  description_DESC
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
  media_ASC
  media_DESC
  icon_ASC
  icon_DESC
  category_ASC
  category_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CategoryPreviousValues {
  id: ID!
  intro: String
  description: String
  name: String
  slug: String
  media: String
  icon: String
  category: ProjectCategory!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CategoryScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CategoryScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CategoryScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CategoryScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  intro: String

  """All values that are not equal to given value."""
  intro_not: String

  """All values that are contained in given list."""
  intro_in: [String!]

  """All values that are not contained in given list."""
  intro_not_in: [String!]

  """All values less than the given value."""
  intro_lt: String

  """All values less than or equal the given value."""
  intro_lte: String

  """All values greater than the given value."""
  intro_gt: String

  """All values greater than or equal the given value."""
  intro_gte: String

  """All values containing the given string."""
  intro_contains: String

  """All values not containing the given string."""
  intro_not_contains: String

  """All values starting with the given string."""
  intro_starts_with: String

  """All values not starting with the given string."""
  intro_not_starts_with: String

  """All values ending with the given string."""
  intro_ends_with: String

  """All values not ending with the given string."""
  intro_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  media: String

  """All values that are not equal to given value."""
  media_not: String

  """All values that are contained in given list."""
  media_in: [String!]

  """All values that are not contained in given list."""
  media_not_in: [String!]

  """All values less than the given value."""
  media_lt: String

  """All values less than or equal the given value."""
  media_lte: String

  """All values greater than the given value."""
  media_gt: String

  """All values greater than or equal the given value."""
  media_gte: String

  """All values containing the given string."""
  media_contains: String

  """All values not containing the given string."""
  media_not_contains: String

  """All values starting with the given string."""
  media_starts_with: String

  """All values not starting with the given string."""
  media_not_starts_with: String

  """All values ending with the given string."""
  media_ends_with: String

  """All values not ending with the given string."""
  media_not_ends_with: String
  icon: String

  """All values that are not equal to given value."""
  icon_not: String

  """All values that are contained in given list."""
  icon_in: [String!]

  """All values that are not contained in given list."""
  icon_not_in: [String!]

  """All values less than the given value."""
  icon_lt: String

  """All values less than or equal the given value."""
  icon_lte: String

  """All values greater than the given value."""
  icon_gt: String

  """All values greater than or equal the given value."""
  icon_gte: String

  """All values containing the given string."""
  icon_contains: String

  """All values not containing the given string."""
  icon_not_contains: String

  """All values starting with the given string."""
  icon_starts_with: String

  """All values not starting with the given string."""
  icon_not_starts_with: String

  """All values ending with the given string."""
  icon_ends_with: String

  """All values not ending with the given string."""
  icon_not_ends_with: String
  category: ProjectCategory

  """All values that are not equal to given value."""
  category_not: ProjectCategory

  """All values that are contained in given list."""
  category_in: [ProjectCategory!]

  """All values that are not contained in given list."""
  category_not_in: [ProjectCategory!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type CategorySubscriptionPayload {
  mutation: MutationType!
  node: Category
  updatedFields: [String!]
  previousValues: CategoryPreviousValues
}

input CategorySubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CategorySubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CategorySubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CategorySubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CategoryWhereInput
}

input CategoryUpdateDataInput {
  intro: String
  description: String
  name: String
  slug: String
  media: String
  icon: String
  category: ProjectCategory
  projects: ProjectUpdateManyWithoutCategoriesInput
}

input CategoryUpdateInput {
  intro: String
  description: String
  name: String
  slug: String
  media: String
  icon: String
  category: ProjectCategory
  projects: ProjectUpdateManyWithoutCategoriesInput
}

input CategoryUpdateManyDataInput {
  intro: String
  description: String
  name: String
  slug: String
  media: String
  icon: String
  category: ProjectCategory
}

input CategoryUpdateManyInput {
  create: [CategoryCreateInput!]
  connect: [CategoryWhereUniqueInput!]
  set: [CategoryWhereUniqueInput!]
  disconnect: [CategoryWhereUniqueInput!]
  delete: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueNestedInput!]
  updateMany: [CategoryUpdateManyWithWhereNestedInput!]
  deleteMany: [CategoryScalarWhereInput!]
  upsert: [CategoryUpsertWithWhereUniqueNestedInput!]
}

input CategoryUpdateManyMutationInput {
  intro: String
  description: String
  name: String
  slug: String
  media: String
  icon: String
  category: ProjectCategory
}

input CategoryUpdateManyWithoutProjectsInput {
  create: [CategoryCreateWithoutProjectsInput!]
  connect: [CategoryWhereUniqueInput!]
  set: [CategoryWhereUniqueInput!]
  disconnect: [CategoryWhereUniqueInput!]
  delete: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueWithoutProjectsInput!]
  updateMany: [CategoryUpdateManyWithWhereNestedInput!]
  deleteMany: [CategoryScalarWhereInput!]
  upsert: [CategoryUpsertWithWhereUniqueWithoutProjectsInput!]
}

input CategoryUpdateManyWithWhereNestedInput {
  where: CategoryScalarWhereInput!
  data: CategoryUpdateManyDataInput!
}

input CategoryUpdateWithoutProjectsDataInput {
  intro: String
  description: String
  name: String
  slug: String
  media: String
  icon: String
  category: ProjectCategory
}

input CategoryUpdateWithWhereUniqueNestedInput {
  where: CategoryWhereUniqueInput!
  data: CategoryUpdateDataInput!
}

input CategoryUpdateWithWhereUniqueWithoutProjectsInput {
  where: CategoryWhereUniqueInput!
  data: CategoryUpdateWithoutProjectsDataInput!
}

input CategoryUpsertWithWhereUniqueNestedInput {
  where: CategoryWhereUniqueInput!
  update: CategoryUpdateDataInput!
  create: CategoryCreateInput!
}

input CategoryUpsertWithWhereUniqueWithoutProjectsInput {
  where: CategoryWhereUniqueInput!
  update: CategoryUpdateWithoutProjectsDataInput!
  create: CategoryCreateWithoutProjectsInput!
}

input CategoryWhereInput {
  """Logical AND on all given filters."""
  AND: [CategoryWhereInput!]

  """Logical OR on all given filters."""
  OR: [CategoryWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CategoryWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  intro: String

  """All values that are not equal to given value."""
  intro_not: String

  """All values that are contained in given list."""
  intro_in: [String!]

  """All values that are not contained in given list."""
  intro_not_in: [String!]

  """All values less than the given value."""
  intro_lt: String

  """All values less than or equal the given value."""
  intro_lte: String

  """All values greater than the given value."""
  intro_gt: String

  """All values greater than or equal the given value."""
  intro_gte: String

  """All values containing the given string."""
  intro_contains: String

  """All values not containing the given string."""
  intro_not_contains: String

  """All values starting with the given string."""
  intro_starts_with: String

  """All values not starting with the given string."""
  intro_not_starts_with: String

  """All values ending with the given string."""
  intro_ends_with: String

  """All values not ending with the given string."""
  intro_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  media: String

  """All values that are not equal to given value."""
  media_not: String

  """All values that are contained in given list."""
  media_in: [String!]

  """All values that are not contained in given list."""
  media_not_in: [String!]

  """All values less than the given value."""
  media_lt: String

  """All values less than or equal the given value."""
  media_lte: String

  """All values greater than the given value."""
  media_gt: String

  """All values greater than or equal the given value."""
  media_gte: String

  """All values containing the given string."""
  media_contains: String

  """All values not containing the given string."""
  media_not_contains: String

  """All values starting with the given string."""
  media_starts_with: String

  """All values not starting with the given string."""
  media_not_starts_with: String

  """All values ending with the given string."""
  media_ends_with: String

  """All values not ending with the given string."""
  media_not_ends_with: String
  icon: String

  """All values that are not equal to given value."""
  icon_not: String

  """All values that are contained in given list."""
  icon_in: [String!]

  """All values that are not contained in given list."""
  icon_not_in: [String!]

  """All values less than the given value."""
  icon_lt: String

  """All values less than or equal the given value."""
  icon_lte: String

  """All values greater than the given value."""
  icon_gt: String

  """All values greater than or equal the given value."""
  icon_gte: String

  """All values containing the given string."""
  icon_contains: String

  """All values not containing the given string."""
  icon_not_contains: String

  """All values starting with the given string."""
  icon_starts_with: String

  """All values not starting with the given string."""
  icon_not_starts_with: String

  """All values ending with the given string."""
  icon_ends_with: String

  """All values not ending with the given string."""
  icon_not_ends_with: String
  category: ProjectCategory

  """All values that are not equal to given value."""
  category_not: ProjectCategory

  """All values that are contained in given list."""
  category_in: [ProjectCategory!]

  """All values that are not contained in given list."""
  category_not_in: [ProjectCategory!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  projects_every: ProjectWhereInput
  projects_some: ProjectWhereInput
  projects_none: ProjectWhereInput
}

input CategoryWhereUniqueInput {
  id: ID
  category: ProjectCategory
}

type Content implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  headerImages: [String!]!
  title: String
  subTitle: String
  logo: String
  aboutHtml: String
  villageHtml: String
  projectsHtml: String
  categoriesHtml: String
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category!]
  villages(where: VillageWhereInput, orderBy: VillageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Village!]
  email: String
  youtubeLink: String
  facebookLink: String
  flickrLink: String
  instagramLink: String
}

"""A connection to a list of items."""
type ContentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ContentEdge]!
  aggregate: AggregateContent!
}

input ContentCreateheaderImagesInput {
  set: [String!]
}

input ContentCreateInput {
  id: ID
  title: String
  subTitle: String
  logo: String
  aboutHtml: String
  villageHtml: String
  projectsHtml: String
  categoriesHtml: String
  email: String
  youtubeLink: String
  facebookLink: String
  flickrLink: String
  instagramLink: String
  headerImages: ContentCreateheaderImagesInput
  categories: CategoryCreateManyInput
  villages: VillageCreateManyWithoutContentInput
}

input ContentCreateManyWithoutVillagesInput {
  create: [ContentCreateWithoutVillagesInput!]
  connect: [ContentWhereUniqueInput!]
}

input ContentCreateWithoutVillagesInput {
  id: ID
  title: String
  subTitle: String
  logo: String
  aboutHtml: String
  villageHtml: String
  projectsHtml: String
  categoriesHtml: String
  email: String
  youtubeLink: String
  facebookLink: String
  flickrLink: String
  instagramLink: String
  headerImages: ContentCreateheaderImagesInput
  categories: CategoryCreateManyInput
}

"""An edge in a connection."""
type ContentEdge {
  """The item at the end of the edge."""
  node: Content!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ContentOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  title_ASC
  title_DESC
  subTitle_ASC
  subTitle_DESC
  logo_ASC
  logo_DESC
  aboutHtml_ASC
  aboutHtml_DESC
  villageHtml_ASC
  villageHtml_DESC
  projectsHtml_ASC
  projectsHtml_DESC
  categoriesHtml_ASC
  categoriesHtml_DESC
  email_ASC
  email_DESC
  youtubeLink_ASC
  youtubeLink_DESC
  facebookLink_ASC
  facebookLink_DESC
  flickrLink_ASC
  flickrLink_DESC
  instagramLink_ASC
  instagramLink_DESC
}

type ContentPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  headerImages: [String!]!
  title: String
  subTitle: String
  logo: String
  aboutHtml: String
  villageHtml: String
  projectsHtml: String
  categoriesHtml: String
  email: String
  youtubeLink: String
  facebookLink: String
  flickrLink: String
  instagramLink: String
}

input ContentScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ContentScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ContentScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ContentScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  subTitle: String

  """All values that are not equal to given value."""
  subTitle_not: String

  """All values that are contained in given list."""
  subTitle_in: [String!]

  """All values that are not contained in given list."""
  subTitle_not_in: [String!]

  """All values less than the given value."""
  subTitle_lt: String

  """All values less than or equal the given value."""
  subTitle_lte: String

  """All values greater than the given value."""
  subTitle_gt: String

  """All values greater than or equal the given value."""
  subTitle_gte: String

  """All values containing the given string."""
  subTitle_contains: String

  """All values not containing the given string."""
  subTitle_not_contains: String

  """All values starting with the given string."""
  subTitle_starts_with: String

  """All values not starting with the given string."""
  subTitle_not_starts_with: String

  """All values ending with the given string."""
  subTitle_ends_with: String

  """All values not ending with the given string."""
  subTitle_not_ends_with: String
  logo: String

  """All values that are not equal to given value."""
  logo_not: String

  """All values that are contained in given list."""
  logo_in: [String!]

  """All values that are not contained in given list."""
  logo_not_in: [String!]

  """All values less than the given value."""
  logo_lt: String

  """All values less than or equal the given value."""
  logo_lte: String

  """All values greater than the given value."""
  logo_gt: String

  """All values greater than or equal the given value."""
  logo_gte: String

  """All values containing the given string."""
  logo_contains: String

  """All values not containing the given string."""
  logo_not_contains: String

  """All values starting with the given string."""
  logo_starts_with: String

  """All values not starting with the given string."""
  logo_not_starts_with: String

  """All values ending with the given string."""
  logo_ends_with: String

  """All values not ending with the given string."""
  logo_not_ends_with: String
  aboutHtml: String

  """All values that are not equal to given value."""
  aboutHtml_not: String

  """All values that are contained in given list."""
  aboutHtml_in: [String!]

  """All values that are not contained in given list."""
  aboutHtml_not_in: [String!]

  """All values less than the given value."""
  aboutHtml_lt: String

  """All values less than or equal the given value."""
  aboutHtml_lte: String

  """All values greater than the given value."""
  aboutHtml_gt: String

  """All values greater than or equal the given value."""
  aboutHtml_gte: String

  """All values containing the given string."""
  aboutHtml_contains: String

  """All values not containing the given string."""
  aboutHtml_not_contains: String

  """All values starting with the given string."""
  aboutHtml_starts_with: String

  """All values not starting with the given string."""
  aboutHtml_not_starts_with: String

  """All values ending with the given string."""
  aboutHtml_ends_with: String

  """All values not ending with the given string."""
  aboutHtml_not_ends_with: String
  villageHtml: String

  """All values that are not equal to given value."""
  villageHtml_not: String

  """All values that are contained in given list."""
  villageHtml_in: [String!]

  """All values that are not contained in given list."""
  villageHtml_not_in: [String!]

  """All values less than the given value."""
  villageHtml_lt: String

  """All values less than or equal the given value."""
  villageHtml_lte: String

  """All values greater than the given value."""
  villageHtml_gt: String

  """All values greater than or equal the given value."""
  villageHtml_gte: String

  """All values containing the given string."""
  villageHtml_contains: String

  """All values not containing the given string."""
  villageHtml_not_contains: String

  """All values starting with the given string."""
  villageHtml_starts_with: String

  """All values not starting with the given string."""
  villageHtml_not_starts_with: String

  """All values ending with the given string."""
  villageHtml_ends_with: String

  """All values not ending with the given string."""
  villageHtml_not_ends_with: String
  projectsHtml: String

  """All values that are not equal to given value."""
  projectsHtml_not: String

  """All values that are contained in given list."""
  projectsHtml_in: [String!]

  """All values that are not contained in given list."""
  projectsHtml_not_in: [String!]

  """All values less than the given value."""
  projectsHtml_lt: String

  """All values less than or equal the given value."""
  projectsHtml_lte: String

  """All values greater than the given value."""
  projectsHtml_gt: String

  """All values greater than or equal the given value."""
  projectsHtml_gte: String

  """All values containing the given string."""
  projectsHtml_contains: String

  """All values not containing the given string."""
  projectsHtml_not_contains: String

  """All values starting with the given string."""
  projectsHtml_starts_with: String

  """All values not starting with the given string."""
  projectsHtml_not_starts_with: String

  """All values ending with the given string."""
  projectsHtml_ends_with: String

  """All values not ending with the given string."""
  projectsHtml_not_ends_with: String
  categoriesHtml: String

  """All values that are not equal to given value."""
  categoriesHtml_not: String

  """All values that are contained in given list."""
  categoriesHtml_in: [String!]

  """All values that are not contained in given list."""
  categoriesHtml_not_in: [String!]

  """All values less than the given value."""
  categoriesHtml_lt: String

  """All values less than or equal the given value."""
  categoriesHtml_lte: String

  """All values greater than the given value."""
  categoriesHtml_gt: String

  """All values greater than or equal the given value."""
  categoriesHtml_gte: String

  """All values containing the given string."""
  categoriesHtml_contains: String

  """All values not containing the given string."""
  categoriesHtml_not_contains: String

  """All values starting with the given string."""
  categoriesHtml_starts_with: String

  """All values not starting with the given string."""
  categoriesHtml_not_starts_with: String

  """All values ending with the given string."""
  categoriesHtml_ends_with: String

  """All values not ending with the given string."""
  categoriesHtml_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  youtubeLink: String

  """All values that are not equal to given value."""
  youtubeLink_not: String

  """All values that are contained in given list."""
  youtubeLink_in: [String!]

  """All values that are not contained in given list."""
  youtubeLink_not_in: [String!]

  """All values less than the given value."""
  youtubeLink_lt: String

  """All values less than or equal the given value."""
  youtubeLink_lte: String

  """All values greater than the given value."""
  youtubeLink_gt: String

  """All values greater than or equal the given value."""
  youtubeLink_gte: String

  """All values containing the given string."""
  youtubeLink_contains: String

  """All values not containing the given string."""
  youtubeLink_not_contains: String

  """All values starting with the given string."""
  youtubeLink_starts_with: String

  """All values not starting with the given string."""
  youtubeLink_not_starts_with: String

  """All values ending with the given string."""
  youtubeLink_ends_with: String

  """All values not ending with the given string."""
  youtubeLink_not_ends_with: String
  facebookLink: String

  """All values that are not equal to given value."""
  facebookLink_not: String

  """All values that are contained in given list."""
  facebookLink_in: [String!]

  """All values that are not contained in given list."""
  facebookLink_not_in: [String!]

  """All values less than the given value."""
  facebookLink_lt: String

  """All values less than or equal the given value."""
  facebookLink_lte: String

  """All values greater than the given value."""
  facebookLink_gt: String

  """All values greater than or equal the given value."""
  facebookLink_gte: String

  """All values containing the given string."""
  facebookLink_contains: String

  """All values not containing the given string."""
  facebookLink_not_contains: String

  """All values starting with the given string."""
  facebookLink_starts_with: String

  """All values not starting with the given string."""
  facebookLink_not_starts_with: String

  """All values ending with the given string."""
  facebookLink_ends_with: String

  """All values not ending with the given string."""
  facebookLink_not_ends_with: String
  flickrLink: String

  """All values that are not equal to given value."""
  flickrLink_not: String

  """All values that are contained in given list."""
  flickrLink_in: [String!]

  """All values that are not contained in given list."""
  flickrLink_not_in: [String!]

  """All values less than the given value."""
  flickrLink_lt: String

  """All values less than or equal the given value."""
  flickrLink_lte: String

  """All values greater than the given value."""
  flickrLink_gt: String

  """All values greater than or equal the given value."""
  flickrLink_gte: String

  """All values containing the given string."""
  flickrLink_contains: String

  """All values not containing the given string."""
  flickrLink_not_contains: String

  """All values starting with the given string."""
  flickrLink_starts_with: String

  """All values not starting with the given string."""
  flickrLink_not_starts_with: String

  """All values ending with the given string."""
  flickrLink_ends_with: String

  """All values not ending with the given string."""
  flickrLink_not_ends_with: String
  instagramLink: String

  """All values that are not equal to given value."""
  instagramLink_not: String

  """All values that are contained in given list."""
  instagramLink_in: [String!]

  """All values that are not contained in given list."""
  instagramLink_not_in: [String!]

  """All values less than the given value."""
  instagramLink_lt: String

  """All values less than or equal the given value."""
  instagramLink_lte: String

  """All values greater than the given value."""
  instagramLink_gt: String

  """All values greater than or equal the given value."""
  instagramLink_gte: String

  """All values containing the given string."""
  instagramLink_contains: String

  """All values not containing the given string."""
  instagramLink_not_contains: String

  """All values starting with the given string."""
  instagramLink_starts_with: String

  """All values not starting with the given string."""
  instagramLink_not_starts_with: String

  """All values ending with the given string."""
  instagramLink_ends_with: String

  """All values not ending with the given string."""
  instagramLink_not_ends_with: String
}

type ContentSubscriptionPayload {
  mutation: MutationType!
  node: Content
  updatedFields: [String!]
  previousValues: ContentPreviousValues
}

input ContentSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ContentSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ContentSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ContentSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ContentWhereInput
}

input ContentUpdateheaderImagesInput {
  set: [String!]
}

input ContentUpdateInput {
  title: String
  subTitle: String
  logo: String
  aboutHtml: String
  villageHtml: String
  projectsHtml: String
  categoriesHtml: String
  email: String
  youtubeLink: String
  facebookLink: String
  flickrLink: String
  instagramLink: String
  headerImages: ContentUpdateheaderImagesInput
  categories: CategoryUpdateManyInput
  villages: VillageUpdateManyWithoutContentInput
}

input ContentUpdateManyDataInput {
  title: String
  subTitle: String
  logo: String
  aboutHtml: String
  villageHtml: String
  projectsHtml: String
  categoriesHtml: String
  email: String
  youtubeLink: String
  facebookLink: String
  flickrLink: String
  instagramLink: String
  headerImages: ContentUpdateheaderImagesInput
}

input ContentUpdateManyMutationInput {
  title: String
  subTitle: String
  logo: String
  aboutHtml: String
  villageHtml: String
  projectsHtml: String
  categoriesHtml: String
  email: String
  youtubeLink: String
  facebookLink: String
  flickrLink: String
  instagramLink: String
  headerImages: ContentUpdateheaderImagesInput
}

input ContentUpdateManyWithoutVillagesInput {
  create: [ContentCreateWithoutVillagesInput!]
  connect: [ContentWhereUniqueInput!]
  set: [ContentWhereUniqueInput!]
  disconnect: [ContentWhereUniqueInput!]
  delete: [ContentWhereUniqueInput!]
  update: [ContentUpdateWithWhereUniqueWithoutVillagesInput!]
  updateMany: [ContentUpdateManyWithWhereNestedInput!]
  deleteMany: [ContentScalarWhereInput!]
  upsert: [ContentUpsertWithWhereUniqueWithoutVillagesInput!]
}

input ContentUpdateManyWithWhereNestedInput {
  where: ContentScalarWhereInput!
  data: ContentUpdateManyDataInput!
}

input ContentUpdateWithoutVillagesDataInput {
  title: String
  subTitle: String
  logo: String
  aboutHtml: String
  villageHtml: String
  projectsHtml: String
  categoriesHtml: String
  email: String
  youtubeLink: String
  facebookLink: String
  flickrLink: String
  instagramLink: String
  headerImages: ContentUpdateheaderImagesInput
  categories: CategoryUpdateManyInput
}

input ContentUpdateWithWhereUniqueWithoutVillagesInput {
  where: ContentWhereUniqueInput!
  data: ContentUpdateWithoutVillagesDataInput!
}

input ContentUpsertWithWhereUniqueWithoutVillagesInput {
  where: ContentWhereUniqueInput!
  update: ContentUpdateWithoutVillagesDataInput!
  create: ContentCreateWithoutVillagesInput!
}

input ContentWhereInput {
  """Logical AND on all given filters."""
  AND: [ContentWhereInput!]

  """Logical OR on all given filters."""
  OR: [ContentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ContentWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  subTitle: String

  """All values that are not equal to given value."""
  subTitle_not: String

  """All values that are contained in given list."""
  subTitle_in: [String!]

  """All values that are not contained in given list."""
  subTitle_not_in: [String!]

  """All values less than the given value."""
  subTitle_lt: String

  """All values less than or equal the given value."""
  subTitle_lte: String

  """All values greater than the given value."""
  subTitle_gt: String

  """All values greater than or equal the given value."""
  subTitle_gte: String

  """All values containing the given string."""
  subTitle_contains: String

  """All values not containing the given string."""
  subTitle_not_contains: String

  """All values starting with the given string."""
  subTitle_starts_with: String

  """All values not starting with the given string."""
  subTitle_not_starts_with: String

  """All values ending with the given string."""
  subTitle_ends_with: String

  """All values not ending with the given string."""
  subTitle_not_ends_with: String
  logo: String

  """All values that are not equal to given value."""
  logo_not: String

  """All values that are contained in given list."""
  logo_in: [String!]

  """All values that are not contained in given list."""
  logo_not_in: [String!]

  """All values less than the given value."""
  logo_lt: String

  """All values less than or equal the given value."""
  logo_lte: String

  """All values greater than the given value."""
  logo_gt: String

  """All values greater than or equal the given value."""
  logo_gte: String

  """All values containing the given string."""
  logo_contains: String

  """All values not containing the given string."""
  logo_not_contains: String

  """All values starting with the given string."""
  logo_starts_with: String

  """All values not starting with the given string."""
  logo_not_starts_with: String

  """All values ending with the given string."""
  logo_ends_with: String

  """All values not ending with the given string."""
  logo_not_ends_with: String
  aboutHtml: String

  """All values that are not equal to given value."""
  aboutHtml_not: String

  """All values that are contained in given list."""
  aboutHtml_in: [String!]

  """All values that are not contained in given list."""
  aboutHtml_not_in: [String!]

  """All values less than the given value."""
  aboutHtml_lt: String

  """All values less than or equal the given value."""
  aboutHtml_lte: String

  """All values greater than the given value."""
  aboutHtml_gt: String

  """All values greater than or equal the given value."""
  aboutHtml_gte: String

  """All values containing the given string."""
  aboutHtml_contains: String

  """All values not containing the given string."""
  aboutHtml_not_contains: String

  """All values starting with the given string."""
  aboutHtml_starts_with: String

  """All values not starting with the given string."""
  aboutHtml_not_starts_with: String

  """All values ending with the given string."""
  aboutHtml_ends_with: String

  """All values not ending with the given string."""
  aboutHtml_not_ends_with: String
  villageHtml: String

  """All values that are not equal to given value."""
  villageHtml_not: String

  """All values that are contained in given list."""
  villageHtml_in: [String!]

  """All values that are not contained in given list."""
  villageHtml_not_in: [String!]

  """All values less than the given value."""
  villageHtml_lt: String

  """All values less than or equal the given value."""
  villageHtml_lte: String

  """All values greater than the given value."""
  villageHtml_gt: String

  """All values greater than or equal the given value."""
  villageHtml_gte: String

  """All values containing the given string."""
  villageHtml_contains: String

  """All values not containing the given string."""
  villageHtml_not_contains: String

  """All values starting with the given string."""
  villageHtml_starts_with: String

  """All values not starting with the given string."""
  villageHtml_not_starts_with: String

  """All values ending with the given string."""
  villageHtml_ends_with: String

  """All values not ending with the given string."""
  villageHtml_not_ends_with: String
  projectsHtml: String

  """All values that are not equal to given value."""
  projectsHtml_not: String

  """All values that are contained in given list."""
  projectsHtml_in: [String!]

  """All values that are not contained in given list."""
  projectsHtml_not_in: [String!]

  """All values less than the given value."""
  projectsHtml_lt: String

  """All values less than or equal the given value."""
  projectsHtml_lte: String

  """All values greater than the given value."""
  projectsHtml_gt: String

  """All values greater than or equal the given value."""
  projectsHtml_gte: String

  """All values containing the given string."""
  projectsHtml_contains: String

  """All values not containing the given string."""
  projectsHtml_not_contains: String

  """All values starting with the given string."""
  projectsHtml_starts_with: String

  """All values not starting with the given string."""
  projectsHtml_not_starts_with: String

  """All values ending with the given string."""
  projectsHtml_ends_with: String

  """All values not ending with the given string."""
  projectsHtml_not_ends_with: String
  categoriesHtml: String

  """All values that are not equal to given value."""
  categoriesHtml_not: String

  """All values that are contained in given list."""
  categoriesHtml_in: [String!]

  """All values that are not contained in given list."""
  categoriesHtml_not_in: [String!]

  """All values less than the given value."""
  categoriesHtml_lt: String

  """All values less than or equal the given value."""
  categoriesHtml_lte: String

  """All values greater than the given value."""
  categoriesHtml_gt: String

  """All values greater than or equal the given value."""
  categoriesHtml_gte: String

  """All values containing the given string."""
  categoriesHtml_contains: String

  """All values not containing the given string."""
  categoriesHtml_not_contains: String

  """All values starting with the given string."""
  categoriesHtml_starts_with: String

  """All values not starting with the given string."""
  categoriesHtml_not_starts_with: String

  """All values ending with the given string."""
  categoriesHtml_ends_with: String

  """All values not ending with the given string."""
  categoriesHtml_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  youtubeLink: String

  """All values that are not equal to given value."""
  youtubeLink_not: String

  """All values that are contained in given list."""
  youtubeLink_in: [String!]

  """All values that are not contained in given list."""
  youtubeLink_not_in: [String!]

  """All values less than the given value."""
  youtubeLink_lt: String

  """All values less than or equal the given value."""
  youtubeLink_lte: String

  """All values greater than the given value."""
  youtubeLink_gt: String

  """All values greater than or equal the given value."""
  youtubeLink_gte: String

  """All values containing the given string."""
  youtubeLink_contains: String

  """All values not containing the given string."""
  youtubeLink_not_contains: String

  """All values starting with the given string."""
  youtubeLink_starts_with: String

  """All values not starting with the given string."""
  youtubeLink_not_starts_with: String

  """All values ending with the given string."""
  youtubeLink_ends_with: String

  """All values not ending with the given string."""
  youtubeLink_not_ends_with: String
  facebookLink: String

  """All values that are not equal to given value."""
  facebookLink_not: String

  """All values that are contained in given list."""
  facebookLink_in: [String!]

  """All values that are not contained in given list."""
  facebookLink_not_in: [String!]

  """All values less than the given value."""
  facebookLink_lt: String

  """All values less than or equal the given value."""
  facebookLink_lte: String

  """All values greater than the given value."""
  facebookLink_gt: String

  """All values greater than or equal the given value."""
  facebookLink_gte: String

  """All values containing the given string."""
  facebookLink_contains: String

  """All values not containing the given string."""
  facebookLink_not_contains: String

  """All values starting with the given string."""
  facebookLink_starts_with: String

  """All values not starting with the given string."""
  facebookLink_not_starts_with: String

  """All values ending with the given string."""
  facebookLink_ends_with: String

  """All values not ending with the given string."""
  facebookLink_not_ends_with: String
  flickrLink: String

  """All values that are not equal to given value."""
  flickrLink_not: String

  """All values that are contained in given list."""
  flickrLink_in: [String!]

  """All values that are not contained in given list."""
  flickrLink_not_in: [String!]

  """All values less than the given value."""
  flickrLink_lt: String

  """All values less than or equal the given value."""
  flickrLink_lte: String

  """All values greater than the given value."""
  flickrLink_gt: String

  """All values greater than or equal the given value."""
  flickrLink_gte: String

  """All values containing the given string."""
  flickrLink_contains: String

  """All values not containing the given string."""
  flickrLink_not_contains: String

  """All values starting with the given string."""
  flickrLink_starts_with: String

  """All values not starting with the given string."""
  flickrLink_not_starts_with: String

  """All values ending with the given string."""
  flickrLink_ends_with: String

  """All values not ending with the given string."""
  flickrLink_not_ends_with: String
  instagramLink: String

  """All values that are not equal to given value."""
  instagramLink_not: String

  """All values that are contained in given list."""
  instagramLink_in: [String!]

  """All values that are not contained in given list."""
  instagramLink_not_in: [String!]

  """All values less than the given value."""
  instagramLink_lt: String

  """All values less than or equal the given value."""
  instagramLink_lte: String

  """All values greater than the given value."""
  instagramLink_gt: String

  """All values greater than or equal the given value."""
  instagramLink_gte: String

  """All values containing the given string."""
  instagramLink_contains: String

  """All values not containing the given string."""
  instagramLink_not_contains: String

  """All values starting with the given string."""
  instagramLink_starts_with: String

  """All values not starting with the given string."""
  instagramLink_not_starts_with: String

  """All values ending with the given string."""
  instagramLink_ends_with: String

  """All values not ending with the given string."""
  instagramLink_not_ends_with: String
  categories_every: CategoryWhereInput
  categories_some: CategoryWhereInput
  categories_none: CategoryWhereInput
  villages_every: VillageWhereInput
  villages_some: VillageWhereInput
  villages_none: VillageWhereInput
}

input ContentWhereUniqueInput {
  id: ID
}

scalar DateTime

type File implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  filename: String!
  mimetype: String!
  encoding: String!
  url: String!
}

"""A connection to a list of items."""
type FileConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [FileEdge]!
  aggregate: AggregateFile!
}

input FileCreateInput {
  id: ID
  filename: String!
  mimetype: String!
  encoding: String!
  url: String!
}

"""An edge in a connection."""
type FileEdge {
  """The item at the end of the edge."""
  node: File!

  """A cursor for use in pagination."""
  cursor: String!
}

enum FileOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  filename_ASC
  filename_DESC
  mimetype_ASC
  mimetype_DESC
  encoding_ASC
  encoding_DESC
  url_ASC
  url_DESC
}

type FilePreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  filename: String!
  mimetype: String!
  encoding: String!
  url: String!
}

type FileSubscriptionPayload {
  mutation: MutationType!
  node: File
  updatedFields: [String!]
  previousValues: FilePreviousValues
}

input FileSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [FileSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [FileSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FileSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: FileWhereInput
}

input FileUpdateInput {
  filename: String
  mimetype: String
  encoding: String
  url: String
}

input FileUpdateManyMutationInput {
  filename: String
  mimetype: String
  encoding: String
  url: String
}

input FileWhereInput {
  """Logical AND on all given filters."""
  AND: [FileWhereInput!]

  """Logical OR on all given filters."""
  OR: [FileWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FileWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  filename: String

  """All values that are not equal to given value."""
  filename_not: String

  """All values that are contained in given list."""
  filename_in: [String!]

  """All values that are not contained in given list."""
  filename_not_in: [String!]

  """All values less than the given value."""
  filename_lt: String

  """All values less than or equal the given value."""
  filename_lte: String

  """All values greater than the given value."""
  filename_gt: String

  """All values greater than or equal the given value."""
  filename_gte: String

  """All values containing the given string."""
  filename_contains: String

  """All values not containing the given string."""
  filename_not_contains: String

  """All values starting with the given string."""
  filename_starts_with: String

  """All values not starting with the given string."""
  filename_not_starts_with: String

  """All values ending with the given string."""
  filename_ends_with: String

  """All values not ending with the given string."""
  filename_not_ends_with: String
  mimetype: String

  """All values that are not equal to given value."""
  mimetype_not: String

  """All values that are contained in given list."""
  mimetype_in: [String!]

  """All values that are not contained in given list."""
  mimetype_not_in: [String!]

  """All values less than the given value."""
  mimetype_lt: String

  """All values less than or equal the given value."""
  mimetype_lte: String

  """All values greater than the given value."""
  mimetype_gt: String

  """All values greater than or equal the given value."""
  mimetype_gte: String

  """All values containing the given string."""
  mimetype_contains: String

  """All values not containing the given string."""
  mimetype_not_contains: String

  """All values starting with the given string."""
  mimetype_starts_with: String

  """All values not starting with the given string."""
  mimetype_not_starts_with: String

  """All values ending with the given string."""
  mimetype_ends_with: String

  """All values not ending with the given string."""
  mimetype_not_ends_with: String
  encoding: String

  """All values that are not equal to given value."""
  encoding_not: String

  """All values that are contained in given list."""
  encoding_in: [String!]

  """All values that are not contained in given list."""
  encoding_not_in: [String!]

  """All values less than the given value."""
  encoding_lt: String

  """All values less than or equal the given value."""
  encoding_lte: String

  """All values greater than the given value."""
  encoding_gt: String

  """All values greater than or equal the given value."""
  encoding_gte: String

  """All values containing the given string."""
  encoding_contains: String

  """All values not containing the given string."""
  encoding_not_contains: String

  """All values starting with the given string."""
  encoding_starts_with: String

  """All values not starting with the given string."""
  encoding_not_starts_with: String

  """All values ending with the given string."""
  encoding_ends_with: String

  """All values not ending with the given string."""
  encoding_not_ends_with: String
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
}

input FileWhereUniqueInput {
  id: ID
  url: String
}

"""Raw JSON value"""
scalar Json

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createPost(data: PostCreateInput!): Post!
  createUser(data: UserCreateInput!): User!
  createContent(data: ContentCreateInput!): Content!
  createVillage(data: VillageCreateInput!): Village!
  createProject(data: ProjectCreateInput!): Project!
  createNews(data: NewsCreateInput!): News!
  createNewsletterSubscription(data: NewsletterSubscriptionCreateInput!): NewsletterSubscription!
  createResetPasswordRequest(data: ResetPasswordRequestCreateInput!): ResetPasswordRequest!
  createFile(data: FileCreateInput!): File!
  createProjectTag(data: ProjectTagCreateInput!): ProjectTag!
  createCategory(data: CategoryCreateInput!): Category!
  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateContent(data: ContentUpdateInput!, where: ContentWhereUniqueInput!): Content
  updateVillage(data: VillageUpdateInput!, where: VillageWhereUniqueInput!): Village
  updateProject(data: ProjectUpdateInput!, where: ProjectWhereUniqueInput!): Project
  updateNews(data: NewsUpdateInput!, where: NewsWhereUniqueInput!): News
  updateNewsletterSubscription(data: NewsletterSubscriptionUpdateInput!, where: NewsletterSubscriptionWhereUniqueInput!): NewsletterSubscription
  updateResetPasswordRequest(data: ResetPasswordRequestUpdateInput!, where: ResetPasswordRequestWhereUniqueInput!): ResetPasswordRequest
  updateFile(data: FileUpdateInput!, where: FileWhereUniqueInput!): File
  updateProjectTag(data: ProjectTagUpdateInput!, where: ProjectTagWhereUniqueInput!): ProjectTag
  updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category
  deletePost(where: PostWhereUniqueInput!): Post
  deleteUser(where: UserWhereUniqueInput!): User
  deleteContent(where: ContentWhereUniqueInput!): Content
  deleteVillage(where: VillageWhereUniqueInput!): Village
  deleteProject(where: ProjectWhereUniqueInput!): Project
  deleteNews(where: NewsWhereUniqueInput!): News
  deleteNewsletterSubscription(where: NewsletterSubscriptionWhereUniqueInput!): NewsletterSubscription
  deleteResetPasswordRequest(where: ResetPasswordRequestWhereUniqueInput!): ResetPasswordRequest
  deleteFile(where: FileWhereUniqueInput!): File
  deleteProjectTag(where: ProjectTagWhereUniqueInput!): ProjectTag
  deleteCategory(where: CategoryWhereUniqueInput!): Category
  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertContent(where: ContentWhereUniqueInput!, create: ContentCreateInput!, update: ContentUpdateInput!): Content!
  upsertVillage(where: VillageWhereUniqueInput!, create: VillageCreateInput!, update: VillageUpdateInput!): Village!
  upsertProject(where: ProjectWhereUniqueInput!, create: ProjectCreateInput!, update: ProjectUpdateInput!): Project!
  upsertNews(where: NewsWhereUniqueInput!, create: NewsCreateInput!, update: NewsUpdateInput!): News!
  upsertNewsletterSubscription(where: NewsletterSubscriptionWhereUniqueInput!, create: NewsletterSubscriptionCreateInput!, update: NewsletterSubscriptionUpdateInput!): NewsletterSubscription!
  upsertResetPasswordRequest(where: ResetPasswordRequestWhereUniqueInput!, create: ResetPasswordRequestCreateInput!, update: ResetPasswordRequestUpdateInput!): ResetPasswordRequest!
  upsertFile(where: FileWhereUniqueInput!, create: FileCreateInput!, update: FileUpdateInput!): File!
  upsertProjectTag(where: ProjectTagWhereUniqueInput!, create: ProjectTagCreateInput!, update: ProjectTagUpdateInput!): ProjectTag!
  upsertCategory(where: CategoryWhereUniqueInput!, create: CategoryCreateInput!, update: CategoryUpdateInput!): Category!
  updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyContents(data: ContentUpdateManyMutationInput!, where: ContentWhereInput): BatchPayload!
  updateManyVillages(data: VillageUpdateManyMutationInput!, where: VillageWhereInput): BatchPayload!
  updateManyProjects(data: ProjectUpdateManyMutationInput!, where: ProjectWhereInput): BatchPayload!
  updateManyNewses(data: NewsUpdateManyMutationInput!, where: NewsWhereInput): BatchPayload!
  updateManyNewsletterSubscriptions(data: NewsletterSubscriptionUpdateManyMutationInput!, where: NewsletterSubscriptionWhereInput): BatchPayload!
  updateManyResetPasswordRequests(data: ResetPasswordRequestUpdateManyMutationInput!, where: ResetPasswordRequestWhereInput): BatchPayload!
  updateManyFiles(data: FileUpdateManyMutationInput!, where: FileWhereInput): BatchPayload!
  updateManyProjectTags(data: ProjectTagUpdateManyMutationInput!, where: ProjectTagWhereInput): BatchPayload!
  updateManyCategories(data: CategoryUpdateManyMutationInput!, where: CategoryWhereInput): BatchPayload!
  deleteManyPosts(where: PostWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyContents(where: ContentWhereInput): BatchPayload!
  deleteManyVillages(where: VillageWhereInput): BatchPayload!
  deleteManyProjects(where: ProjectWhereInput): BatchPayload!
  deleteManyNewses(where: NewsWhereInput): BatchPayload!
  deleteManyNewsletterSubscriptions(where: NewsletterSubscriptionWhereInput): BatchPayload!
  deleteManyResetPasswordRequests(where: ResetPasswordRequestWhereInput): BatchPayload!
  deleteManyFiles(where: FileWhereInput): BatchPayload!
  deleteManyProjectTags(where: ProjectTagWhereInput): BatchPayload!
  deleteManyCategories(where: CategoryWhereInput): BatchPayload!
  executeRaw(database: PrismaDatabase, query: String!): Json!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

type News implements Node {
  id: ID!
  intro: String
  tags(where: ProjectTagWhereInput, orderBy: ProjectTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProjectTag!]
  description: String
  link: String
  post: Post
  title: String
  media: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type NewsConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [NewsEdge]!
  aggregate: AggregateNews!
}

input NewsCreateInput {
  id: ID
  intro: String
  description: String
  link: String
  title: String
  media: String
  tags: ProjectTagCreateManyInput
  post: PostCreateOneWithoutNewsInput
}

input NewsCreateOneWithoutPostInput {
  create: NewsCreateWithoutPostInput
  connect: NewsWhereUniqueInput
}

input NewsCreateWithoutPostInput {
  id: ID
  intro: String
  description: String
  link: String
  title: String
  media: String
  tags: ProjectTagCreateManyInput
}

"""An edge in a connection."""
type NewsEdge {
  """The item at the end of the edge."""
  node: News!

  """A cursor for use in pagination."""
  cursor: String!
}

type NewsletterSubscription implements Node {
  id: ID!
  email: String!
  createdAt: DateTime!
}

"""A connection to a list of items."""
type NewsletterSubscriptionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [NewsletterSubscriptionEdge]!
  aggregate: AggregateNewsletterSubscription!
}

input NewsletterSubscriptionCreateInput {
  id: ID
  email: String!
}

"""An edge in a connection."""
type NewsletterSubscriptionEdge {
  """The item at the end of the edge."""
  node: NewsletterSubscription!

  """A cursor for use in pagination."""
  cursor: String!
}

enum NewsletterSubscriptionOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  createdAt_ASC
  createdAt_DESC
}

type NewsletterSubscriptionPreviousValues {
  id: ID!
  email: String!
  createdAt: DateTime!
}

type NewsletterSubscriptionSubscriptionPayload {
  mutation: MutationType!
  node: NewsletterSubscription
  updatedFields: [String!]
  previousValues: NewsletterSubscriptionPreviousValues
}

input NewsletterSubscriptionSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [NewsletterSubscriptionSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [NewsletterSubscriptionSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [NewsletterSubscriptionSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: NewsletterSubscriptionWhereInput
}

input NewsletterSubscriptionUpdateInput {
  email: String
}

input NewsletterSubscriptionUpdateManyMutationInput {
  email: String
}

input NewsletterSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [NewsletterSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [NewsletterSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [NewsletterSubscriptionWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
}

input NewsletterSubscriptionWhereUniqueInput {
  id: ID
  email: String
}

enum NewsOrderByInput {
  id_ASC
  id_DESC
  intro_ASC
  intro_DESC
  description_ASC
  description_DESC
  link_ASC
  link_DESC
  title_ASC
  title_DESC
  media_ASC
  media_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type NewsPreviousValues {
  id: ID!
  intro: String
  description: String
  link: String
  title: String
  media: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type NewsSubscriptionPayload {
  mutation: MutationType!
  node: News
  updatedFields: [String!]
  previousValues: NewsPreviousValues
}

input NewsSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [NewsSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [NewsSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [NewsSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: NewsWhereInput
}

input NewsUpdateInput {
  intro: String
  description: String
  link: String
  title: String
  media: String
  tags: ProjectTagUpdateManyInput
  post: PostUpdateOneWithoutNewsInput
}

input NewsUpdateManyMutationInput {
  intro: String
  description: String
  link: String
  title: String
  media: String
}

input NewsUpdateOneWithoutPostInput {
  create: NewsCreateWithoutPostInput
  connect: NewsWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: NewsUpdateWithoutPostDataInput
  upsert: NewsUpsertWithoutPostInput
}

input NewsUpdateWithoutPostDataInput {
  intro: String
  description: String
  link: String
  title: String
  media: String
  tags: ProjectTagUpdateManyInput
}

input NewsUpsertWithoutPostInput {
  update: NewsUpdateWithoutPostDataInput!
  create: NewsCreateWithoutPostInput!
}

input NewsWhereInput {
  """Logical AND on all given filters."""
  AND: [NewsWhereInput!]

  """Logical OR on all given filters."""
  OR: [NewsWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [NewsWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  intro: String

  """All values that are not equal to given value."""
  intro_not: String

  """All values that are contained in given list."""
  intro_in: [String!]

  """All values that are not contained in given list."""
  intro_not_in: [String!]

  """All values less than the given value."""
  intro_lt: String

  """All values less than or equal the given value."""
  intro_lte: String

  """All values greater than the given value."""
  intro_gt: String

  """All values greater than or equal the given value."""
  intro_gte: String

  """All values containing the given string."""
  intro_contains: String

  """All values not containing the given string."""
  intro_not_contains: String

  """All values starting with the given string."""
  intro_starts_with: String

  """All values not starting with the given string."""
  intro_not_starts_with: String

  """All values ending with the given string."""
  intro_ends_with: String

  """All values not ending with the given string."""
  intro_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  link: String

  """All values that are not equal to given value."""
  link_not: String

  """All values that are contained in given list."""
  link_in: [String!]

  """All values that are not contained in given list."""
  link_not_in: [String!]

  """All values less than the given value."""
  link_lt: String

  """All values less than or equal the given value."""
  link_lte: String

  """All values greater than the given value."""
  link_gt: String

  """All values greater than or equal the given value."""
  link_gte: String

  """All values containing the given string."""
  link_contains: String

  """All values not containing the given string."""
  link_not_contains: String

  """All values starting with the given string."""
  link_starts_with: String

  """All values not starting with the given string."""
  link_not_starts_with: String

  """All values ending with the given string."""
  link_ends_with: String

  """All values not ending with the given string."""
  link_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  media: String

  """All values that are not equal to given value."""
  media_not: String

  """All values that are contained in given list."""
  media_in: [String!]

  """All values that are not contained in given list."""
  media_not_in: [String!]

  """All values less than the given value."""
  media_lt: String

  """All values less than or equal the given value."""
  media_lte: String

  """All values greater than the given value."""
  media_gt: String

  """All values greater than or equal the given value."""
  media_gte: String

  """All values containing the given string."""
  media_contains: String

  """All values not containing the given string."""
  media_not_contains: String

  """All values starting with the given string."""
  media_starts_with: String

  """All values not starting with the given string."""
  media_not_starts_with: String

  """All values ending with the given string."""
  media_ends_with: String

  """All values not ending with the given string."""
  media_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  tags_every: ProjectTagWhereInput
  tags_some: ProjectTagWhereInput
  tags_none: ProjectTagWhereInput
  post: PostWhereInput
}

input NewsWhereUniqueInput {
  id: ID
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Post implements Node {
  id: ID!
  slug: String
  createdAt: DateTime!
  updatedAt: DateTime!
  isPublished: Boolean!
  title: String!
  body: String!
  author: User
  news: News
}

"""A connection to a list of items."""
type PostConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PostEdge]!
  aggregate: AggregatePost!
}

input PostCreateInput {
  id: ID
  slug: String
  isPublished: Boolean
  title: String!
  body: String!
  author: UserCreateOneWithoutPostsInput
  news: NewsCreateOneWithoutPostInput
}

input PostCreateManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  connect: [PostWhereUniqueInput!]
}

input PostCreateOneWithoutNewsInput {
  create: PostCreateWithoutNewsInput
  connect: PostWhereUniqueInput
}

input PostCreateWithoutAuthorInput {
  id: ID
  slug: String
  isPublished: Boolean
  title: String!
  body: String!
  news: NewsCreateOneWithoutPostInput
}

input PostCreateWithoutNewsInput {
  id: ID
  slug: String
  isPublished: Boolean
  title: String!
  body: String!
  author: UserCreateOneWithoutPostsInput
}

"""An edge in a connection."""
type PostEdge {
  """The item at the end of the edge."""
  node: Post!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PostOrderByInput {
  id_ASC
  id_DESC
  slug_ASC
  slug_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  isPublished_ASC
  isPublished_DESC
  title_ASC
  title_DESC
  body_ASC
  body_DESC
}

type PostPreviousValues {
  id: ID!
  slug: String
  createdAt: DateTime!
  updatedAt: DateTime!
  isPublished: Boolean!
  title: String!
  body: String!
}

input PostScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [PostScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [PostScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PostScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  isPublished: Boolean

  """All values that are not equal to given value."""
  isPublished_not: Boolean
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  body: String

  """All values that are not equal to given value."""
  body_not: String

  """All values that are contained in given list."""
  body_in: [String!]

  """All values that are not contained in given list."""
  body_not_in: [String!]

  """All values less than the given value."""
  body_lt: String

  """All values less than or equal the given value."""
  body_lte: String

  """All values greater than the given value."""
  body_gt: String

  """All values greater than or equal the given value."""
  body_gte: String

  """All values containing the given string."""
  body_contains: String

  """All values not containing the given string."""
  body_not_contains: String

  """All values starting with the given string."""
  body_starts_with: String

  """All values not starting with the given string."""
  body_not_starts_with: String

  """All values ending with the given string."""
  body_ends_with: String

  """All values not ending with the given string."""
  body_not_ends_with: String
}

type PostSubscriptionPayload {
  mutation: MutationType!
  node: Post
  updatedFields: [String!]
  previousValues: PostPreviousValues
}

input PostSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PostSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PostSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PostSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PostWhereInput
}

input PostUpdateInput {
  slug: String
  isPublished: Boolean
  title: String
  body: String
  author: UserUpdateOneWithoutPostsInput
  news: NewsUpdateOneWithoutPostInput
}

input PostUpdateManyDataInput {
  slug: String
  isPublished: Boolean
  title: String
  body: String
}

input PostUpdateManyMutationInput {
  slug: String
  isPublished: Boolean
  title: String
  body: String
}

input PostUpdateManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  connect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  disconnect: [PostWhereUniqueInput!]
  delete: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [PostUpdateManyWithWhereNestedInput!]
  deleteMany: [PostScalarWhereInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]
}

input PostUpdateManyWithWhereNestedInput {
  where: PostScalarWhereInput!
  data: PostUpdateManyDataInput!
}

input PostUpdateOneWithoutNewsInput {
  create: PostCreateWithoutNewsInput
  connect: PostWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: PostUpdateWithoutNewsDataInput
  upsert: PostUpsertWithoutNewsInput
}

input PostUpdateWithoutAuthorDataInput {
  slug: String
  isPublished: Boolean
  title: String
  body: String
  news: NewsUpdateOneWithoutPostInput
}

input PostUpdateWithoutNewsDataInput {
  slug: String
  isPublished: Boolean
  title: String
  body: String
  author: UserUpdateOneWithoutPostsInput
}

input PostUpdateWithWhereUniqueWithoutAuthorInput {
  where: PostWhereUniqueInput!
  data: PostUpdateWithoutAuthorDataInput!
}

input PostUpsertWithoutNewsInput {
  update: PostUpdateWithoutNewsDataInput!
  create: PostCreateWithoutNewsInput!
}

input PostUpsertWithWhereUniqueWithoutAuthorInput {
  where: PostWhereUniqueInput!
  update: PostUpdateWithoutAuthorDataInput!
  create: PostCreateWithoutAuthorInput!
}

input PostWhereInput {
  """Logical AND on all given filters."""
  AND: [PostWhereInput!]

  """Logical OR on all given filters."""
  OR: [PostWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PostWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  isPublished: Boolean

  """All values that are not equal to given value."""
  isPublished_not: Boolean
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  body: String

  """All values that are not equal to given value."""
  body_not: String

  """All values that are contained in given list."""
  body_in: [String!]

  """All values that are not contained in given list."""
  body_not_in: [String!]

  """All values less than the given value."""
  body_lt: String

  """All values less than or equal the given value."""
  body_lte: String

  """All values greater than the given value."""
  body_gt: String

  """All values greater than or equal the given value."""
  body_gte: String

  """All values containing the given string."""
  body_contains: String

  """All values not containing the given string."""
  body_not_contains: String

  """All values starting with the given string."""
  body_starts_with: String

  """All values not starting with the given string."""
  body_not_starts_with: String

  """All values ending with the given string."""
  body_ends_with: String

  """All values not ending with the given string."""
  body_not_ends_with: String
  author: UserWhereInput
  news: NewsWhereInput
}

input PostWhereUniqueInput {
  id: ID
  slug: String
}

enum PrismaDatabase {
  default
}

type Project implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category!]
  tags(where: ProjectTagWhereInput, orderBy: ProjectTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProjectTag!]
  name: String
  slug: String
  photos: [String!]!
  media: String
  intro: String
  description: String
}

enum ProjectCategory {
  CAT1
  CAT2
  CAT3
  CAT4
}

"""A connection to a list of items."""
type ProjectConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ProjectEdge]!
  aggregate: AggregateProject!
}

input ProjectCreateInput {
  id: ID
  name: String
  slug: String
  media: String
  intro: String
  description: String
  photos: ProjectCreatephotosInput
  categories: CategoryCreateManyWithoutProjectsInput
  tags: ProjectTagCreateManyWithoutProjectsInput
}

input ProjectCreateManyWithoutCategoriesInput {
  create: [ProjectCreateWithoutCategoriesInput!]
  connect: [ProjectWhereUniqueInput!]
}

input ProjectCreateManyWithoutTagsInput {
  create: [ProjectCreateWithoutTagsInput!]
  connect: [ProjectWhereUniqueInput!]
}

input ProjectCreatephotosInput {
  set: [String!]
}

input ProjectCreateWithoutCategoriesInput {
  id: ID
  name: String
  slug: String
  media: String
  intro: String
  description: String
  photos: ProjectCreatephotosInput
  tags: ProjectTagCreateManyWithoutProjectsInput
}

input ProjectCreateWithoutTagsInput {
  id: ID
  name: String
  slug: String
  media: String
  intro: String
  description: String
  photos: ProjectCreatephotosInput
  categories: CategoryCreateManyWithoutProjectsInput
}

"""An edge in a connection."""
type ProjectEdge {
  """The item at the end of the edge."""
  node: Project!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ProjectOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
  media_ASC
  media_DESC
  intro_ASC
  intro_DESC
  description_ASC
  description_DESC
}

type ProjectPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  slug: String
  photos: [String!]!
  media: String
  intro: String
  description: String
}

input ProjectScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ProjectScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProjectScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProjectScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  media: String

  """All values that are not equal to given value."""
  media_not: String

  """All values that are contained in given list."""
  media_in: [String!]

  """All values that are not contained in given list."""
  media_not_in: [String!]

  """All values less than the given value."""
  media_lt: String

  """All values less than or equal the given value."""
  media_lte: String

  """All values greater than the given value."""
  media_gt: String

  """All values greater than or equal the given value."""
  media_gte: String

  """All values containing the given string."""
  media_contains: String

  """All values not containing the given string."""
  media_not_contains: String

  """All values starting with the given string."""
  media_starts_with: String

  """All values not starting with the given string."""
  media_not_starts_with: String

  """All values ending with the given string."""
  media_ends_with: String

  """All values not ending with the given string."""
  media_not_ends_with: String
  intro: String

  """All values that are not equal to given value."""
  intro_not: String

  """All values that are contained in given list."""
  intro_in: [String!]

  """All values that are not contained in given list."""
  intro_not_in: [String!]

  """All values less than the given value."""
  intro_lt: String

  """All values less than or equal the given value."""
  intro_lte: String

  """All values greater than the given value."""
  intro_gt: String

  """All values greater than or equal the given value."""
  intro_gte: String

  """All values containing the given string."""
  intro_contains: String

  """All values not containing the given string."""
  intro_not_contains: String

  """All values starting with the given string."""
  intro_starts_with: String

  """All values not starting with the given string."""
  intro_not_starts_with: String

  """All values ending with the given string."""
  intro_ends_with: String

  """All values not ending with the given string."""
  intro_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
}

type ProjectSubscriptionPayload {
  mutation: MutationType!
  node: Project
  updatedFields: [String!]
  previousValues: ProjectPreviousValues
}

input ProjectSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ProjectSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProjectSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProjectSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProjectWhereInput
}

type ProjectTag implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  slug: String
  photos: [String!]!
  media: String
  intro: String
  description: String
  projects(where: ProjectWhereInput, orderBy: ProjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Project!]
}

"""A connection to a list of items."""
type ProjectTagConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ProjectTagEdge]!
  aggregate: AggregateProjectTag!
}

input ProjectTagCreateInput {
  id: ID
  name: String
  slug: String
  media: String
  intro: String
  description: String
  photos: ProjectTagCreatephotosInput
  projects: ProjectCreateManyWithoutTagsInput
}

input ProjectTagCreateManyInput {
  create: [ProjectTagCreateInput!]
  connect: [ProjectTagWhereUniqueInput!]
}

input ProjectTagCreateManyWithoutProjectsInput {
  create: [ProjectTagCreateWithoutProjectsInput!]
  connect: [ProjectTagWhereUniqueInput!]
}

input ProjectTagCreatephotosInput {
  set: [String!]
}

input ProjectTagCreateWithoutProjectsInput {
  id: ID
  name: String
  slug: String
  media: String
  intro: String
  description: String
  photos: ProjectTagCreatephotosInput
}

"""An edge in a connection."""
type ProjectTagEdge {
  """The item at the end of the edge."""
  node: ProjectTag!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ProjectTagOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
  media_ASC
  media_DESC
  intro_ASC
  intro_DESC
  description_ASC
  description_DESC
}

type ProjectTagPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  slug: String
  photos: [String!]!
  media: String
  intro: String
  description: String
}

input ProjectTagScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ProjectTagScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProjectTagScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProjectTagScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  media: String

  """All values that are not equal to given value."""
  media_not: String

  """All values that are contained in given list."""
  media_in: [String!]

  """All values that are not contained in given list."""
  media_not_in: [String!]

  """All values less than the given value."""
  media_lt: String

  """All values less than or equal the given value."""
  media_lte: String

  """All values greater than the given value."""
  media_gt: String

  """All values greater than or equal the given value."""
  media_gte: String

  """All values containing the given string."""
  media_contains: String

  """All values not containing the given string."""
  media_not_contains: String

  """All values starting with the given string."""
  media_starts_with: String

  """All values not starting with the given string."""
  media_not_starts_with: String

  """All values ending with the given string."""
  media_ends_with: String

  """All values not ending with the given string."""
  media_not_ends_with: String
  intro: String

  """All values that are not equal to given value."""
  intro_not: String

  """All values that are contained in given list."""
  intro_in: [String!]

  """All values that are not contained in given list."""
  intro_not_in: [String!]

  """All values less than the given value."""
  intro_lt: String

  """All values less than or equal the given value."""
  intro_lte: String

  """All values greater than the given value."""
  intro_gt: String

  """All values greater than or equal the given value."""
  intro_gte: String

  """All values containing the given string."""
  intro_contains: String

  """All values not containing the given string."""
  intro_not_contains: String

  """All values starting with the given string."""
  intro_starts_with: String

  """All values not starting with the given string."""
  intro_not_starts_with: String

  """All values ending with the given string."""
  intro_ends_with: String

  """All values not ending with the given string."""
  intro_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
}

type ProjectTagSubscriptionPayload {
  mutation: MutationType!
  node: ProjectTag
  updatedFields: [String!]
  previousValues: ProjectTagPreviousValues
}

input ProjectTagSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ProjectTagSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProjectTagSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProjectTagSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProjectTagWhereInput
}

input ProjectTagUpdateDataInput {
  name: String
  slug: String
  media: String
  intro: String
  description: String
  photos: ProjectTagUpdatephotosInput
  projects: ProjectUpdateManyWithoutTagsInput
}

input ProjectTagUpdateInput {
  name: String
  slug: String
  media: String
  intro: String
  description: String
  photos: ProjectTagUpdatephotosInput
  projects: ProjectUpdateManyWithoutTagsInput
}

input ProjectTagUpdateManyDataInput {
  name: String
  slug: String
  media: String
  intro: String
  description: String
  photos: ProjectTagUpdatephotosInput
}

input ProjectTagUpdateManyInput {
  create: [ProjectTagCreateInput!]
  connect: [ProjectTagWhereUniqueInput!]
  set: [ProjectTagWhereUniqueInput!]
  disconnect: [ProjectTagWhereUniqueInput!]
  delete: [ProjectTagWhereUniqueInput!]
  update: [ProjectTagUpdateWithWhereUniqueNestedInput!]
  updateMany: [ProjectTagUpdateManyWithWhereNestedInput!]
  deleteMany: [ProjectTagScalarWhereInput!]
  upsert: [ProjectTagUpsertWithWhereUniqueNestedInput!]
}

input ProjectTagUpdateManyMutationInput {
  name: String
  slug: String
  media: String
  intro: String
  description: String
  photos: ProjectTagUpdatephotosInput
}

input ProjectTagUpdateManyWithoutProjectsInput {
  create: [ProjectTagCreateWithoutProjectsInput!]
  connect: [ProjectTagWhereUniqueInput!]
  set: [ProjectTagWhereUniqueInput!]
  disconnect: [ProjectTagWhereUniqueInput!]
  delete: [ProjectTagWhereUniqueInput!]
  update: [ProjectTagUpdateWithWhereUniqueWithoutProjectsInput!]
  updateMany: [ProjectTagUpdateManyWithWhereNestedInput!]
  deleteMany: [ProjectTagScalarWhereInput!]
  upsert: [ProjectTagUpsertWithWhereUniqueWithoutProjectsInput!]
}

input ProjectTagUpdateManyWithWhereNestedInput {
  where: ProjectTagScalarWhereInput!
  data: ProjectTagUpdateManyDataInput!
}

input ProjectTagUpdatephotosInput {
  set: [String!]
}

input ProjectTagUpdateWithoutProjectsDataInput {
  name: String
  slug: String
  media: String
  intro: String
  description: String
  photos: ProjectTagUpdatephotosInput
}

input ProjectTagUpdateWithWhereUniqueNestedInput {
  where: ProjectTagWhereUniqueInput!
  data: ProjectTagUpdateDataInput!
}

input ProjectTagUpdateWithWhereUniqueWithoutProjectsInput {
  where: ProjectTagWhereUniqueInput!
  data: ProjectTagUpdateWithoutProjectsDataInput!
}

input ProjectTagUpsertWithWhereUniqueNestedInput {
  where: ProjectTagWhereUniqueInput!
  update: ProjectTagUpdateDataInput!
  create: ProjectTagCreateInput!
}

input ProjectTagUpsertWithWhereUniqueWithoutProjectsInput {
  where: ProjectTagWhereUniqueInput!
  update: ProjectTagUpdateWithoutProjectsDataInput!
  create: ProjectTagCreateWithoutProjectsInput!
}

input ProjectTagWhereInput {
  """Logical AND on all given filters."""
  AND: [ProjectTagWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProjectTagWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProjectTagWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  media: String

  """All values that are not equal to given value."""
  media_not: String

  """All values that are contained in given list."""
  media_in: [String!]

  """All values that are not contained in given list."""
  media_not_in: [String!]

  """All values less than the given value."""
  media_lt: String

  """All values less than or equal the given value."""
  media_lte: String

  """All values greater than the given value."""
  media_gt: String

  """All values greater than or equal the given value."""
  media_gte: String

  """All values containing the given string."""
  media_contains: String

  """All values not containing the given string."""
  media_not_contains: String

  """All values starting with the given string."""
  media_starts_with: String

  """All values not starting with the given string."""
  media_not_starts_with: String

  """All values ending with the given string."""
  media_ends_with: String

  """All values not ending with the given string."""
  media_not_ends_with: String
  intro: String

  """All values that are not equal to given value."""
  intro_not: String

  """All values that are contained in given list."""
  intro_in: [String!]

  """All values that are not contained in given list."""
  intro_not_in: [String!]

  """All values less than the given value."""
  intro_lt: String

  """All values less than or equal the given value."""
  intro_lte: String

  """All values greater than the given value."""
  intro_gt: String

  """All values greater than or equal the given value."""
  intro_gte: String

  """All values containing the given string."""
  intro_contains: String

  """All values not containing the given string."""
  intro_not_contains: String

  """All values starting with the given string."""
  intro_starts_with: String

  """All values not starting with the given string."""
  intro_not_starts_with: String

  """All values ending with the given string."""
  intro_ends_with: String

  """All values not ending with the given string."""
  intro_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  projects_every: ProjectWhereInput
  projects_some: ProjectWhereInput
  projects_none: ProjectWhereInput
}

input ProjectTagWhereUniqueInput {
  id: ID
  slug: String
}

input ProjectUpdateInput {
  name: String
  slug: String
  media: String
  intro: String
  description: String
  photos: ProjectUpdatephotosInput
  categories: CategoryUpdateManyWithoutProjectsInput
  tags: ProjectTagUpdateManyWithoutProjectsInput
}

input ProjectUpdateManyDataInput {
  name: String
  slug: String
  media: String
  intro: String
  description: String
  photos: ProjectUpdatephotosInput
}

input ProjectUpdateManyMutationInput {
  name: String
  slug: String
  media: String
  intro: String
  description: String
  photos: ProjectUpdatephotosInput
}

input ProjectUpdateManyWithoutCategoriesInput {
  create: [ProjectCreateWithoutCategoriesInput!]
  connect: [ProjectWhereUniqueInput!]
  set: [ProjectWhereUniqueInput!]
  disconnect: [ProjectWhereUniqueInput!]
  delete: [ProjectWhereUniqueInput!]
  update: [ProjectUpdateWithWhereUniqueWithoutCategoriesInput!]
  updateMany: [ProjectUpdateManyWithWhereNestedInput!]
  deleteMany: [ProjectScalarWhereInput!]
  upsert: [ProjectUpsertWithWhereUniqueWithoutCategoriesInput!]
}

input ProjectUpdateManyWithoutTagsInput {
  create: [ProjectCreateWithoutTagsInput!]
  connect: [ProjectWhereUniqueInput!]
  set: [ProjectWhereUniqueInput!]
  disconnect: [ProjectWhereUniqueInput!]
  delete: [ProjectWhereUniqueInput!]
  update: [ProjectUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [ProjectUpdateManyWithWhereNestedInput!]
  deleteMany: [ProjectScalarWhereInput!]
  upsert: [ProjectUpsertWithWhereUniqueWithoutTagsInput!]
}

input ProjectUpdateManyWithWhereNestedInput {
  where: ProjectScalarWhereInput!
  data: ProjectUpdateManyDataInput!
}

input ProjectUpdatephotosInput {
  set: [String!]
}

input ProjectUpdateWithoutCategoriesDataInput {
  name: String
  slug: String
  media: String
  intro: String
  description: String
  photos: ProjectUpdatephotosInput
  tags: ProjectTagUpdateManyWithoutProjectsInput
}

input ProjectUpdateWithoutTagsDataInput {
  name: String
  slug: String
  media: String
  intro: String
  description: String
  photos: ProjectUpdatephotosInput
  categories: CategoryUpdateManyWithoutProjectsInput
}

input ProjectUpdateWithWhereUniqueWithoutCategoriesInput {
  where: ProjectWhereUniqueInput!
  data: ProjectUpdateWithoutCategoriesDataInput!
}

input ProjectUpdateWithWhereUniqueWithoutTagsInput {
  where: ProjectWhereUniqueInput!
  data: ProjectUpdateWithoutTagsDataInput!
}

input ProjectUpsertWithWhereUniqueWithoutCategoriesInput {
  where: ProjectWhereUniqueInput!
  update: ProjectUpdateWithoutCategoriesDataInput!
  create: ProjectCreateWithoutCategoriesInput!
}

input ProjectUpsertWithWhereUniqueWithoutTagsInput {
  where: ProjectWhereUniqueInput!
  update: ProjectUpdateWithoutTagsDataInput!
  create: ProjectCreateWithoutTagsInput!
}

input ProjectWhereInput {
  """Logical AND on all given filters."""
  AND: [ProjectWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProjectWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProjectWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  media: String

  """All values that are not equal to given value."""
  media_not: String

  """All values that are contained in given list."""
  media_in: [String!]

  """All values that are not contained in given list."""
  media_not_in: [String!]

  """All values less than the given value."""
  media_lt: String

  """All values less than or equal the given value."""
  media_lte: String

  """All values greater than the given value."""
  media_gt: String

  """All values greater than or equal the given value."""
  media_gte: String

  """All values containing the given string."""
  media_contains: String

  """All values not containing the given string."""
  media_not_contains: String

  """All values starting with the given string."""
  media_starts_with: String

  """All values not starting with the given string."""
  media_not_starts_with: String

  """All values ending with the given string."""
  media_ends_with: String

  """All values not ending with the given string."""
  media_not_ends_with: String
  intro: String

  """All values that are not equal to given value."""
  intro_not: String

  """All values that are contained in given list."""
  intro_in: [String!]

  """All values that are not contained in given list."""
  intro_not_in: [String!]

  """All values less than the given value."""
  intro_lt: String

  """All values less than or equal the given value."""
  intro_lte: String

  """All values greater than the given value."""
  intro_gt: String

  """All values greater than or equal the given value."""
  intro_gte: String

  """All values containing the given string."""
  intro_contains: String

  """All values not containing the given string."""
  intro_not_contains: String

  """All values starting with the given string."""
  intro_starts_with: String

  """All values not starting with the given string."""
  intro_not_starts_with: String

  """All values ending with the given string."""
  intro_ends_with: String

  """All values not ending with the given string."""
  intro_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  categories_every: CategoryWhereInput
  categories_some: CategoryWhereInput
  categories_none: CategoryWhereInput
  tags_every: ProjectTagWhereInput
  tags_some: ProjectTagWhereInput
  tags_none: ProjectTagWhereInput
}

input ProjectWhereUniqueInput {
  id: ID
  slug: String
}

type Query {
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  contents(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content]!
  villages(where: VillageWhereInput, orderBy: VillageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Village]!
  projects(where: ProjectWhereInput, orderBy: ProjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Project]!
  newses(where: NewsWhereInput, orderBy: NewsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [News]!
  newsletterSubscriptions(where: NewsletterSubscriptionWhereInput, orderBy: NewsletterSubscriptionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [NewsletterSubscription]!
  resetPasswordRequests(where: ResetPasswordRequestWhereInput, orderBy: ResetPasswordRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ResetPasswordRequest]!
  files(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [File]!
  projectTags(where: ProjectTagWhereInput, orderBy: ProjectTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProjectTag]!
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category]!
  post(where: PostWhereUniqueInput!): Post
  user(where: UserWhereUniqueInput!): User
  content(where: ContentWhereUniqueInput!): Content
  village(where: VillageWhereUniqueInput!): Village
  project(where: ProjectWhereUniqueInput!): Project
  news(where: NewsWhereUniqueInput!): News
  newsletterSubscription(where: NewsletterSubscriptionWhereUniqueInput!): NewsletterSubscription
  resetPasswordRequest(where: ResetPasswordRequestWhereUniqueInput!): ResetPasswordRequest
  file(where: FileWhereUniqueInput!): File
  projectTag(where: ProjectTagWhereUniqueInput!): ProjectTag
  category(where: CategoryWhereUniqueInput!): Category
  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  contentsConnection(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ContentConnection!
  villagesConnection(where: VillageWhereInput, orderBy: VillageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VillageConnection!
  projectsConnection(where: ProjectWhereInput, orderBy: ProjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProjectConnection!
  newsesConnection(where: NewsWhereInput, orderBy: NewsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NewsConnection!
  newsletterSubscriptionsConnection(where: NewsletterSubscriptionWhereInput, orderBy: NewsletterSubscriptionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NewsletterSubscriptionConnection!
  resetPasswordRequestsConnection(where: ResetPasswordRequestWhereInput, orderBy: ResetPasswordRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ResetPasswordRequestConnection!
  filesConnection(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FileConnection!
  projectTagsConnection(where: ProjectTagWhereInput, orderBy: ProjectTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProjectTagConnection!
  categoriesConnection(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CategoryConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type ResetPasswordRequest implements Node {
  id: ID!
  hash: String!
  reset: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
}

"""A connection to a list of items."""
type ResetPasswordRequestConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ResetPasswordRequestEdge]!
  aggregate: AggregateResetPasswordRequest!
}

input ResetPasswordRequestCreateInput {
  id: ID
  hash: String!
  reset: Boolean
  email: String!
}

"""An edge in a connection."""
type ResetPasswordRequestEdge {
  """The item at the end of the edge."""
  node: ResetPasswordRequest!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ResetPasswordRequestOrderByInput {
  id_ASC
  id_DESC
  hash_ASC
  hash_DESC
  reset_ASC
  reset_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  email_ASC
  email_DESC
}

type ResetPasswordRequestPreviousValues {
  id: ID!
  hash: String!
  reset: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
}

type ResetPasswordRequestSubscriptionPayload {
  mutation: MutationType!
  node: ResetPasswordRequest
  updatedFields: [String!]
  previousValues: ResetPasswordRequestPreviousValues
}

input ResetPasswordRequestSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ResetPasswordRequestSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ResetPasswordRequestSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ResetPasswordRequestSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ResetPasswordRequestWhereInput
}

input ResetPasswordRequestUpdateInput {
  hash: String
  reset: Boolean
  email: String
}

input ResetPasswordRequestUpdateManyMutationInput {
  hash: String
  reset: Boolean
  email: String
}

input ResetPasswordRequestWhereInput {
  """Logical AND on all given filters."""
  AND: [ResetPasswordRequestWhereInput!]

  """Logical OR on all given filters."""
  OR: [ResetPasswordRequestWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ResetPasswordRequestWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  hash: String

  """All values that are not equal to given value."""
  hash_not: String

  """All values that are contained in given list."""
  hash_in: [String!]

  """All values that are not contained in given list."""
  hash_not_in: [String!]

  """All values less than the given value."""
  hash_lt: String

  """All values less than or equal the given value."""
  hash_lte: String

  """All values greater than the given value."""
  hash_gt: String

  """All values greater than or equal the given value."""
  hash_gte: String

  """All values containing the given string."""
  hash_contains: String

  """All values not containing the given string."""
  hash_not_contains: String

  """All values starting with the given string."""
  hash_starts_with: String

  """All values not starting with the given string."""
  hash_not_starts_with: String

  """All values ending with the given string."""
  hash_ends_with: String

  """All values not ending with the given string."""
  hash_not_ends_with: String
  reset: Boolean

  """All values that are not equal to given value."""
  reset_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
}

input ResetPasswordRequestWhereUniqueInput {
  id: ID
  hash: String
}

enum Role {
  ADMIN
  EDITOR
  READER
}

type Subscription {
  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  content(where: ContentSubscriptionWhereInput): ContentSubscriptionPayload
  village(where: VillageSubscriptionWhereInput): VillageSubscriptionPayload
  project(where: ProjectSubscriptionWhereInput): ProjectSubscriptionPayload
  news(where: NewsSubscriptionWhereInput): NewsSubscriptionPayload
  newsletterSubscription(where: NewsletterSubscriptionSubscriptionWhereInput): NewsletterSubscriptionSubscriptionPayload
  resetPasswordRequest(where: ResetPasswordRequestSubscriptionWhereInput): ResetPasswordRequestSubscriptionPayload
  file(where: FileSubscriptionWhereInput): FileSubscriptionPayload
  projectTag(where: ProjectTagSubscriptionWhereInput): ProjectTagSubscriptionPayload
  category(where: CategorySubscriptionWhereInput): CategorySubscriptionPayload
}

type User implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  password: String!
  firstName: String
  lastName: String
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]
  subscribed: Boolean
  role: Role!
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  email: String!
  password: String!
  firstName: String
  lastName: String
  subscribed: Boolean
  role: Role
  posts: PostCreateManyWithoutAuthorInput
}

input UserCreateOneWithoutPostsInput {
  create: UserCreateWithoutPostsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutPostsInput {
  id: ID
  email: String!
  password: String!
  firstName: String
  lastName: String
  subscribed: Boolean
  role: Role
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  subscribed_ASC
  subscribed_DESC
  role_ASC
  role_DESC
}

type UserPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  password: String!
  firstName: String
  lastName: String
  subscribed: Boolean
  role: Role!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  email: String
  password: String
  firstName: String
  lastName: String
  subscribed: Boolean
  role: Role
  posts: PostUpdateManyWithoutAuthorInput
}

input UserUpdateManyMutationInput {
  email: String
  password: String
  firstName: String
  lastName: String
  subscribed: Boolean
  role: Role
}

input UserUpdateOneWithoutPostsInput {
  create: UserCreateWithoutPostsInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutPostsDataInput
  upsert: UserUpsertWithoutPostsInput
}

input UserUpdateWithoutPostsDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  subscribed: Boolean
  role: Role
}

input UserUpsertWithoutPostsInput {
  update: UserUpdateWithoutPostsDataInput!
  create: UserCreateWithoutPostsInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  firstName: String

  """All values that are not equal to given value."""
  firstName_not: String

  """All values that are contained in given list."""
  firstName_in: [String!]

  """All values that are not contained in given list."""
  firstName_not_in: [String!]

  """All values less than the given value."""
  firstName_lt: String

  """All values less than or equal the given value."""
  firstName_lte: String

  """All values greater than the given value."""
  firstName_gt: String

  """All values greater than or equal the given value."""
  firstName_gte: String

  """All values containing the given string."""
  firstName_contains: String

  """All values not containing the given string."""
  firstName_not_contains: String

  """All values starting with the given string."""
  firstName_starts_with: String

  """All values not starting with the given string."""
  firstName_not_starts_with: String

  """All values ending with the given string."""
  firstName_ends_with: String

  """All values not ending with the given string."""
  firstName_not_ends_with: String
  lastName: String

  """All values that are not equal to given value."""
  lastName_not: String

  """All values that are contained in given list."""
  lastName_in: [String!]

  """All values that are not contained in given list."""
  lastName_not_in: [String!]

  """All values less than the given value."""
  lastName_lt: String

  """All values less than or equal the given value."""
  lastName_lte: String

  """All values greater than the given value."""
  lastName_gt: String

  """All values greater than or equal the given value."""
  lastName_gte: String

  """All values containing the given string."""
  lastName_contains: String

  """All values not containing the given string."""
  lastName_not_contains: String

  """All values starting with the given string."""
  lastName_starts_with: String

  """All values not starting with the given string."""
  lastName_not_starts_with: String

  """All values ending with the given string."""
  lastName_ends_with: String

  """All values not ending with the given string."""
  lastName_not_ends_with: String
  subscribed: Boolean

  """All values that are not equal to given value."""
  subscribed_not: Boolean
  role: Role

  """All values that are not equal to given value."""
  role_not: Role

  """All values that are contained in given list."""
  role_in: [Role!]

  """All values that are not contained in given list."""
  role_not_in: [Role!]
  posts_every: PostWhereInput
  posts_some: PostWhereInput
  posts_none: PostWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
}

type Village implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  slug: String
  photos: [String!]!
  media: String
  intro: String
  mapLink: String
  description: String
  content(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content!]
}

"""A connection to a list of items."""
type VillageConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [VillageEdge]!
  aggregate: AggregateVillage!
}

input VillageCreateInput {
  id: ID
  name: String
  slug: String
  media: String
  intro: String
  mapLink: String
  description: String
  photos: VillageCreatephotosInput
  content: ContentCreateManyWithoutVillagesInput
}

input VillageCreateManyWithoutContentInput {
  create: [VillageCreateWithoutContentInput!]
  connect: [VillageWhereUniqueInput!]
}

input VillageCreatephotosInput {
  set: [String!]
}

input VillageCreateWithoutContentInput {
  id: ID
  name: String
  slug: String
  media: String
  intro: String
  mapLink: String
  description: String
  photos: VillageCreatephotosInput
}

"""An edge in a connection."""
type VillageEdge {
  """The item at the end of the edge."""
  node: Village!

  """A cursor for use in pagination."""
  cursor: String!
}

enum VillageOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
  media_ASC
  media_DESC
  intro_ASC
  intro_DESC
  mapLink_ASC
  mapLink_DESC
  description_ASC
  description_DESC
}

type VillagePreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  slug: String
  photos: [String!]!
  media: String
  intro: String
  mapLink: String
  description: String
}

input VillageScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [VillageScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [VillageScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VillageScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  media: String

  """All values that are not equal to given value."""
  media_not: String

  """All values that are contained in given list."""
  media_in: [String!]

  """All values that are not contained in given list."""
  media_not_in: [String!]

  """All values less than the given value."""
  media_lt: String

  """All values less than or equal the given value."""
  media_lte: String

  """All values greater than the given value."""
  media_gt: String

  """All values greater than or equal the given value."""
  media_gte: String

  """All values containing the given string."""
  media_contains: String

  """All values not containing the given string."""
  media_not_contains: String

  """All values starting with the given string."""
  media_starts_with: String

  """All values not starting with the given string."""
  media_not_starts_with: String

  """All values ending with the given string."""
  media_ends_with: String

  """All values not ending with the given string."""
  media_not_ends_with: String
  intro: String

  """All values that are not equal to given value."""
  intro_not: String

  """All values that are contained in given list."""
  intro_in: [String!]

  """All values that are not contained in given list."""
  intro_not_in: [String!]

  """All values less than the given value."""
  intro_lt: String

  """All values less than or equal the given value."""
  intro_lte: String

  """All values greater than the given value."""
  intro_gt: String

  """All values greater than or equal the given value."""
  intro_gte: String

  """All values containing the given string."""
  intro_contains: String

  """All values not containing the given string."""
  intro_not_contains: String

  """All values starting with the given string."""
  intro_starts_with: String

  """All values not starting with the given string."""
  intro_not_starts_with: String

  """All values ending with the given string."""
  intro_ends_with: String

  """All values not ending with the given string."""
  intro_not_ends_with: String
  mapLink: String

  """All values that are not equal to given value."""
  mapLink_not: String

  """All values that are contained in given list."""
  mapLink_in: [String!]

  """All values that are not contained in given list."""
  mapLink_not_in: [String!]

  """All values less than the given value."""
  mapLink_lt: String

  """All values less than or equal the given value."""
  mapLink_lte: String

  """All values greater than the given value."""
  mapLink_gt: String

  """All values greater than or equal the given value."""
  mapLink_gte: String

  """All values containing the given string."""
  mapLink_contains: String

  """All values not containing the given string."""
  mapLink_not_contains: String

  """All values starting with the given string."""
  mapLink_starts_with: String

  """All values not starting with the given string."""
  mapLink_not_starts_with: String

  """All values ending with the given string."""
  mapLink_ends_with: String

  """All values not ending with the given string."""
  mapLink_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
}

type VillageSubscriptionPayload {
  mutation: MutationType!
  node: Village
  updatedFields: [String!]
  previousValues: VillagePreviousValues
}

input VillageSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [VillageSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [VillageSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VillageSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: VillageWhereInput
}

input VillageUpdateInput {
  name: String
  slug: String
  media: String
  intro: String
  mapLink: String
  description: String
  photos: VillageUpdatephotosInput
  content: ContentUpdateManyWithoutVillagesInput
}

input VillageUpdateManyDataInput {
  name: String
  slug: String
  media: String
  intro: String
  mapLink: String
  description: String
  photos: VillageUpdatephotosInput
}

input VillageUpdateManyMutationInput {
  name: String
  slug: String
  media: String
  intro: String
  mapLink: String
  description: String
  photos: VillageUpdatephotosInput
}

input VillageUpdateManyWithoutContentInput {
  create: [VillageCreateWithoutContentInput!]
  connect: [VillageWhereUniqueInput!]
  set: [VillageWhereUniqueInput!]
  disconnect: [VillageWhereUniqueInput!]
  delete: [VillageWhereUniqueInput!]
  update: [VillageUpdateWithWhereUniqueWithoutContentInput!]
  updateMany: [VillageUpdateManyWithWhereNestedInput!]
  deleteMany: [VillageScalarWhereInput!]
  upsert: [VillageUpsertWithWhereUniqueWithoutContentInput!]
}

input VillageUpdateManyWithWhereNestedInput {
  where: VillageScalarWhereInput!
  data: VillageUpdateManyDataInput!
}

input VillageUpdatephotosInput {
  set: [String!]
}

input VillageUpdateWithoutContentDataInput {
  name: String
  slug: String
  media: String
  intro: String
  mapLink: String
  description: String
  photos: VillageUpdatephotosInput
}

input VillageUpdateWithWhereUniqueWithoutContentInput {
  where: VillageWhereUniqueInput!
  data: VillageUpdateWithoutContentDataInput!
}

input VillageUpsertWithWhereUniqueWithoutContentInput {
  where: VillageWhereUniqueInput!
  update: VillageUpdateWithoutContentDataInput!
  create: VillageCreateWithoutContentInput!
}

input VillageWhereInput {
  """Logical AND on all given filters."""
  AND: [VillageWhereInput!]

  """Logical OR on all given filters."""
  OR: [VillageWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VillageWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  media: String

  """All values that are not equal to given value."""
  media_not: String

  """All values that are contained in given list."""
  media_in: [String!]

  """All values that are not contained in given list."""
  media_not_in: [String!]

  """All values less than the given value."""
  media_lt: String

  """All values less than or equal the given value."""
  media_lte: String

  """All values greater than the given value."""
  media_gt: String

  """All values greater than or equal the given value."""
  media_gte: String

  """All values containing the given string."""
  media_contains: String

  """All values not containing the given string."""
  media_not_contains: String

  """All values starting with the given string."""
  media_starts_with: String

  """All values not starting with the given string."""
  media_not_starts_with: String

  """All values ending with the given string."""
  media_ends_with: String

  """All values not ending with the given string."""
  media_not_ends_with: String
  intro: String

  """All values that are not equal to given value."""
  intro_not: String

  """All values that are contained in given list."""
  intro_in: [String!]

  """All values that are not contained in given list."""
  intro_not_in: [String!]

  """All values less than the given value."""
  intro_lt: String

  """All values less than or equal the given value."""
  intro_lte: String

  """All values greater than the given value."""
  intro_gt: String

  """All values greater than or equal the given value."""
  intro_gte: String

  """All values containing the given string."""
  intro_contains: String

  """All values not containing the given string."""
  intro_not_contains: String

  """All values starting with the given string."""
  intro_starts_with: String

  """All values not starting with the given string."""
  intro_not_starts_with: String

  """All values ending with the given string."""
  intro_ends_with: String

  """All values not ending with the given string."""
  intro_not_ends_with: String
  mapLink: String

  """All values that are not equal to given value."""
  mapLink_not: String

  """All values that are contained in given list."""
  mapLink_in: [String!]

  """All values that are not contained in given list."""
  mapLink_not_in: [String!]

  """All values less than the given value."""
  mapLink_lt: String

  """All values less than or equal the given value."""
  mapLink_lte: String

  """All values greater than the given value."""
  mapLink_gt: String

  """All values greater than or equal the given value."""
  mapLink_gte: String

  """All values containing the given string."""
  mapLink_contains: String

  """All values not containing the given string."""
  mapLink_not_contains: String

  """All values starting with the given string."""
  mapLink_starts_with: String

  """All values not starting with the given string."""
  mapLink_not_starts_with: String

  """All values ending with the given string."""
  mapLink_ends_with: String

  """All values not ending with the given string."""
  mapLink_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  content_every: ContentWhereInput
  content_some: ContentWhereInput
  content_none: ContentWhereInput
}

input VillageWhereUniqueInput {
  id: ID
  slug: String
}
